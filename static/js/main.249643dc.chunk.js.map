{"version":3,"sources":["LoggerInput.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LoggerInput","props","onInputValueChange","bind","this","setState","formattedValue","e","re","RegExp","logText","target","value","formattedEntries","split","logEntry","replaceAll","push","replace","m","String","fromCharCode","parseInt","substring","join","formattedLog","state","className","TextField","rows","fullWidth","id","label","variant","multiline","onChange","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RA+CeA,E,kDAtCX,WAAYC,GAA0B,IAAD,8BACjC,cAAMA,IACDC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAFO,E,sDAKrC,WACIC,KAAKC,SAAS,CACVC,eAAgB,O,gCAIxB,SAAmBC,GACf,IADuB,EACjBC,EAAK,IAAIC,OAAO,uBAAwB,KACxCC,EAAUH,EAAEI,OAAOC,MACrBC,EAAmB,GAHA,cAINH,EAAQI,MAAM,QAJR,IAIvB,2BAAuC,CAAC,IAChCC,EAD+B,QACfC,WAAW,MAAM,MACrCH,EAAiBI,KAAKF,EAASG,QAAQV,GAAI,SAASW,GAChD,OAAOC,OAAOC,aAAaC,SAASH,EAAEI,UAAU,GAAI,UAPrC,8BAUvBnB,KAAKC,SAAS,CACVC,eAAgBO,EAAiBW,KAAK,U,oBAK9C,WACI,IAAMC,EAAerB,KAAKsB,MAAMpB,eAChC,OACI,gCACI,qBAAKqB,UAAU,QAAf,SAAuB,cAACC,EAAA,EAAD,CAAWC,KAAM,IAAKC,WAAS,EAACC,GAAG,iBAAiBC,MAAM,QAAQC,QAAQ,WAAWC,WAAS,EAACC,SAAU/B,KAAKF,uBACrI,qBAAKyB,UAAU,SAAf,SAAwB,cAACC,EAAA,EAAD,CAAWC,KAAM,IAAKC,WAAS,EAACC,GAAG,eAAeC,MAAM,SAASC,QAAQ,WAAWC,WAAS,EAACtB,MAAOa,a,GAjCnHW,a,MCEXC,MANf,WACE,OACE,cAAC,EAAD,KCQWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.249643dc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport TextField from '@mui/material/TextField';\nimport './LoggerInput.css';\n\ntype LoggerInputProps = {\n    formattedValue: string\n}\n\nclass LoggerInput extends Component<{}, LoggerInputProps> {\n    constructor(props: LoggerInputProps) {\n        super(props);\n        this.onInputValueChange = this.onInputValueChange.bind(this);\n    }\n\n    componentWillMount() {\n        this.setState({\n            formattedValue: ''\n        });\n    }\n\n    onInputValueChange(e: any) {\n        const re = new RegExp(\"(\\\\\\\\u)([0-9a-f]{4})\", \"g\");\n        const logText = e.target.value;\n        let formattedEntries = [];\n        for (let line of logText.split('\\\\n')) {\n            let logEntry = line.replaceAll('\\\\t','\\t');\n            formattedEntries.push(logEntry.replace(re, function(m: string){\n                return String.fromCharCode(parseInt(m.substring(2), 16));\n            }));\n        }\n        this.setState({\n            formattedValue: formattedEntries.join('\\n')\n        });\n\n    }\n\n    render() {\n        const formattedLog = this.state.formattedValue;\n        return (\n            <div>\n                <div className=\"Input\"><TextField rows={100} fullWidth id=\"outlined-basic\" label=\"Input\" variant=\"outlined\" multiline onChange={this.onInputValueChange}/></div>\n                <div className=\"Output\"><TextField rows={100} fullWidth id=\"filled-basic\" label=\"Output\" variant=\"outlined\" multiline value={formattedLog} /></div>\n            </div>\n        );\n    }\n}\n\nexport default LoggerInput;","import LoggerInput from './LoggerInput'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <LoggerInput/>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}